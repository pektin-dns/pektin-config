type: object
additionalProperties: false
properties:
    services:
        type: object
        additionalProperties: false
        required:
            - ui
            - api
            - vault
            - recursor
        properties:
            ui:
                type: object
                additionalProperties: false
                properties:
                    enabled:
                        type: boolean
                    domain:
                        $ref: "#/$defs/DomainName"
                    subDomain:
                        $ref: "#/$defs/SubDomain"
                required:
                    - enabled
                    - subDomain
                    - domain
            api:
                type: object
                additionalProperties: false
                properties:
                    enabled:
                        type: boolean
                    domain:
                        $ref: "#/$defs/DomainName"
                    subDomain:
                        $ref: "#/$defs/SubDomain"
                required:
                    - enabled
                    - subDomain
                    - domain
            vault:
                type: object
                additionalProperties: false
                properties:
                    enabled:
                        type: boolean
                    domain:
                        $ref: "#/$defs/DomainName"
                    subDomain:
                        $ref: "#/$defs/SubDomain"
                required:
                    - enabled
                    - subDomain
                    - domain
            recursor:
                type: object
                additionalProperties: false
                properties:
                    enabled:
                        type: boolean
                    domain:
                        $ref: "#/$defs/DomainName"
                    subDomain:
                        $ref: "#/$defs/SubDomain"
                required:
                    - enabled
                    - subDomain
                    - domain
    nodes:
        type: array
        minItems: 1
        items:
            type: object
            additionalProperties: false
            required:
                - name
            properties:
                main:
                    type: boolean
                ips:
                    type: array
                    minItems: 1
                    items:
                        $ref: "#/$defs/Ip"
                legacyIps:
                    type: array
                    minItems: 1
                    items:
                        $ref: "#/$defs/LegacyIp"
                name:
                    type: string
                ansible:
                    $ref: "#/$defs/AnsibleConfig"

                setup:
                    type: object
                    additionalProperties: false
                    required:
                        - system
                        - root
                        - cloneRepo
                        - setup
                        - start
                    properties:
                        system:
                            type: string
                        root:
                            type: object
                            additionalProperties: false
                            properties:
                                disableSystemdResolved:
                                    type: boolean
                                installDocker:
                                    type: boolean
                            required:
                                - disableSystemdResolved
                                - installDocker
                        cloneRepo:
                            type: boolean
                        setup:
                            type: boolean
                        start:
                            type: boolean

    nameservers:
        type: array
        minItems: 1
        # one nameserver (for each domain) must have the main attribute set to true
        items:
            type: object
            additionalProperties: false
            required:
                - domain
                - node
            properties:
                subDomain:
                    $ref: "#/$defs/SubDomain"
                domain:
                    $ref: "#/$defs/DomainName"
                node:
                    type: string
                main:
                    type: boolean
    certificates:
        type: object
        additionalProperties: false
        properties:
            enabled:
                type: boolean
            letsencryptEmail:
                $ref: "#/$defs/Email"
        required:
            - enabled
            - letsencryptEmail

    build:
        type: object
        additionalProperties: false
        required:
            - server
            - api
            - ui
        properties:
            server:
                type: object
                additionalProperties: false
                properties:
                    enabled:
                        type: boolean
                    path:
                        type: string
                required:
                    - enabled
                    - path
            api:
                type: object
                additionalProperties: false
                properties:
                    enabled:
                        type: boolean
                    path:
                        type: string
                required:
                    - enabled
                    - path
            ui:
                type: object
                additionalProperties: false
                properties:
                    enabled:
                        type: boolean
                    path:
                        type: string
                required:
                    - enabled
                    - path

    reverseProxy:
        type: object
        additionalProperties: false
        required:
            - routing
            - tls
            - useLegacyIp
            - createTraefik
            - external
            - tempPektinZone
        properties:
            routing:
                enum: [local, domain]
            tempPektinZone:
                description: Get a temporary pektin zone subdomain for an easy and secure access while your domain changes still propagate. This subdomain will exist for 7 days, will then be deleted and not be recoverable afterwards. Setting this to true implies your acceptance of our privacy policy.
                type: boolean
            tls:
                type: boolean
            useLegacyIp:
                type: boolean
            createTraefik:
                type: boolean
            external:
                type: object
                additionalProperties: false
                required:
                    - enabled
                    - subDomain
                    - domain
                    - services
                properties:
                    enabled:
                        type: boolean
                    domain:
                        $ref: "#/$defs/DomainName"
                    subDomain:
                        $ref: "#/$defs/SubDomain"
                    services:
                        type: object
                        additionalProperties: false
                        required:
                            - gandi
                            - crt
                        properties:
                            gandi:
                                type: boolean
                            crt:
                                type: boolean

    ansible:
        type: object
        additionalProperties: false
        required:
            - sshPubKeyName
        properties:
            sshPubKeyName:
                type: string
    generated:
        type: object
        additionalProperties: false

required:
    - services
    - nodes
    - nameservers
    - certificates
    - reverseProxy
    - build

$defs:
    DomainName:
        type: string
        description: "A valid UTF8 domain name"
        #pattern: '^(?:[a-z0-9_](?:[a-z0-9-_]{0,61}[a-z0-9_]|[-]{2,}?)?\.)*[a-z0-9-_][a-z0-9-]{0,61}[a-z0-9]{1,61}[.]?$'
    SubDomain:
        type: string
        description: "A valid UTF8 domain name not ending with a dot"
        #pattern: '^(?:[a-z0-9_](?:[a-z0-9-_]{0,61}[a-z0-9_]|[-]{2,}?)?\.)*[a-z0-9-_][a-z0-9-]{0,61}[a-z0-9]{1,61}(?<!\.)$'
    Ip:
        type: string
        description: "A valid ip(ipv6) address"
        pattern: '^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$'
    LegacyIp:
        type: string
        description: "A valid legacyIp(ipv4) address"
        pattern: '^(\b25[0-5]|\b2[0-4][0-9]|\b[01]?[0-9][0-9]?)(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$'
    Email:
        type: string
        description: A valid email address
        #pattern: ^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])[.]?$
    NodeName:
        type: string
        description: A alphanumeric hostname for the node not containing double minuses "--"
        pattern: ^((?!--)[a-z0-9-_])*$
    SupportedRegistrars:
        enum: [gandi]
    AnsibleConfigType:
        type: string
        enum: [hetzner]
    AnsibleConfig:
        oneOf:
            - { $ref: "#/$defs/Hetzner" }
    Hetzner:
        type: object
        additionalProperties: false
        required:
            - configType
        properties:
            configType:
                $ref: "#/$defs/AnsibleConfigType"
            floatingIp:
                type: boolean
            floatingLegacyIp:
                type: boolean
            location:
                type: string
                enum: [nbg1, fsn1]
            serverType:
                $ref: "#/$defs/HetznerServerType"

    HetznerServerType:
        type: string
        enum: [cx11, cpx11, cx21, cpx21, cx31, cpx31, cx41, cpx41, cx51, cpx51]
